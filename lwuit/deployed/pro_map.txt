com.sun.lwuit.Button -> h:
    java.lang.String id -> a
    com.sun.lwuit.EventDispatcher dispatcher -> b
    int state -> c
    com.sun.lwuit.Image pressedIcon -> d
    com.sun.lwuit.Image rolloverIcon -> e
    void focusGainedInternal() -> b
    void focusLostInternal() -> c
    java.lang.String getUIID() -> a_
    int getState() -> d
    com.sun.lwuit.Image getPressedIcon() -> e
    com.sun.lwuit.Image getRolloverIcon() -> f
    void addActionListener(com.sun.lwuit.events.ActionListener) -> a
    void fireActionEvent() -> g
    void pressed() -> d_
    void released() -> i
    void keyPressed(int) -> b
    void keyReleased(int) -> a
    void fireClicked() -> j
    boolean isSelectableInteraction() -> k
    void pointerPressed(int,int) -> a
    void pointerReleased(int,int) -> b
    void paint(com.sun.lwuit.Graphics) -> a
    com.sun.lwuit.geom.Dimension calcPreferredSize() -> l
    com.sun.lwuit.plaf.Border getBorder() -> m
com.sun.lwuit.ButtonGroup -> p:
    java.util.Vector buttons -> a
    int selectedIndex -> b
    boolean started -> c
    boolean animate() -> a
    void destroy() -> b
    void paint(com.sun.lwuit.Graphics) -> a
com.sun.lwuit.CheckBox -> ag:
    boolean selected -> a
    java.lang.String getUIID() -> a_
    boolean isSelected() -> n
    void released() -> i
    void paint(com.sun.lwuit.Graphics) -> a
    com.sun.lwuit.geom.Dimension calcPreferredSize() -> l
    java.lang.String paramString() -> q
com.sun.lwuit.ComboBox -> x:
    java.lang.String id -> a
    com.sun.lwuit.Component popupContent -> b
    com.sun.lwuit.List contained -> c
    com.sun.lwuit.Popup popup -> d
    java.lang.String getUIID() -> a_
    void setSelectedIndex(int) -> c
    void setSelectedIndex(int,boolean) -> a
    void setModel(com.sun.lwuit.list.ListModel) -> a
    void setHandlesInput(boolean) -> b
    void setSmoothScrolling(boolean) -> c_
    void pointerReleased(int,int) -> b
    void paint(com.sun.lwuit.Graphics) -> a
    com.sun.lwuit.geom.Dimension calcPreferredSize() -> l
com.sun.lwuit.ComboBox$1 -> g:
    com.sun.lwuit.ComboBox this$0 -> a
    void actionPerformed(com.sun.lwuit.events.ActionEvent) -> a
com.sun.lwuit.Command -> aw:
    boolean disposesDialog -> a
    com.sun.lwuit.Image icon -> b
    java.lang.String command -> c
    java.lang.String getCommandName() -> a
    com.sun.lwuit.Image getIcon() -> b
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void actionPerformed(com.sun.lwuit.events.ActionEvent) -> a
    void setDisposesDialog(boolean) -> a
    boolean isDisposesDialog() -> c
com.sun.lwuit.Component -> an:
    boolean enabled -> a
    boolean visible -> b
    boolean cellRenderer -> c
    boolean fixedPosition -> d
    com.sun.lwuit.geom.Rectangle bounds -> e
    int scrollX -> f
    int scrollY -> g
    com.sun.lwuit.geom.Dimension preferredSize -> h
    com.sun.lwuit.plaf.Style style -> i
    com.sun.lwuit.Container parent -> j
    boolean focused -> k
    boolean focusPainted -> l
    com.sun.lwuit.EventDispatcher focusListeners -> m
    boolean handlesInput -> n
    boolean shouldCalcPreferredSize -> o
    boolean focusable -> p
    boolean isScrollVisible -> q
    boolean smoothScrolling -> r
    int animationSpeed -> s
    com.sun.lwuit.animations.Motion animationMotion -> t
    com.sun.lwuit.animations.Motion draggedMotion -> u
    boolean dragActivated -> v
    int initialScrollY -> w
    int destScrollY -> x
    int lastScrollY -> y
    int beforeLastScrollY -> z
    long[] lastTime -> A
    int[] lastDragged -> B
    int pLastDragged -> C
    boolean initialized -> D
    com.sun.lwuit.geom.Rectangle dirtyRegion -> E
    java.lang.Object dirtyRegionLock -> F
    boolean sizeRequestedByUser -> G
    int getX() -> w
    int getY() -> x
    boolean isVisible() -> y
    com.sun.lwuit.geom.Rectangle getDirtyRegion() -> z
    void setDirtyRegion(com.sun.lwuit.geom.Rectangle) -> a
    void setVisible(boolean) -> f
    int getWidth() -> A
    int getHeight() -> B
    void setX(int) -> e
    void setY(int) -> f
    void setPreferredSize(com.sun.lwuit.geom.Dimension) -> a
    com.sun.lwuit.geom.Dimension getPreferredSize() -> C
    int getPreferredW() -> D
    int getPreferredH() -> E
    void setWidth(int) -> g
    void setHeight(int) -> h
    void setSize(com.sun.lwuit.geom.Dimension) -> b
    java.lang.String getUIID() -> a_
    com.sun.lwuit.Container getParent() -> F
    void setParent(com.sun.lwuit.Container) -> b
    void addFocusListener(com.sun.lwuit.events.FocusListener) -> a
    void fireClicked() -> j
    boolean isSelectableInteraction() -> k
    void fireFocusGained(com.sun.lwuit.Component) -> e
    void fireFocusLost(com.sun.lwuit.Component) -> f
    void fireActionEvent() -> g
    void focusGainedInternal() -> b
    void focusLostInternal() -> c
    void paintBackgrounds(com.sun.lwuit.Graphics) -> b
    int getAbsoluteX() -> G
    int getAbsoluteY() -> H
    void paintInternal(com.sun.lwuit.Graphics,boolean) -> a
    void paintScrollbarY(com.sun.lwuit.Graphics) -> c
    void paintComponent(com.sun.lwuit.Graphics,boolean) -> b
    void drawPainters(com.sun.lwuit.Graphics,com.sun.lwuit.Component,com.sun.lwuit.Component,com.sun.lwuit.geom.Rectangle) -> a
    com.sun.lwuit.plaf.Border getBorder() -> m
    void paintBackground(com.sun.lwuit.Graphics) -> d
    void paint(com.sun.lwuit.Graphics) -> a
    boolean isScrollable() -> I
    boolean isScrollableX() -> r
    boolean isScrollableY() -> s
    int getScrollX() -> J
    int getScrollY() -> K
    void setScrollX(int) -> i
    void setScrollY(int) -> j
    int getBottomGap() -> L
    int getSideGap() -> M
    boolean contains(int,int) -> d
    com.sun.lwuit.geom.Dimension calcPreferredSize() -> l
    com.sun.lwuit.geom.Dimension preferredSize() -> d
    com.sun.lwuit.geom.Rectangle getBounds() -> N
    boolean isFocusable() -> O
    void setFocusable(boolean) -> g
    void setShouldCalcPreferredSize(boolean) -> a_
    boolean isFocusPainted() -> P
    void setFocusPainted(boolean) -> h
    boolean handlesInput() -> Q
    void setHandlesInput(boolean) -> b
    boolean hasFocus() -> R
    void setFocus(boolean) -> i
    com.sun.lwuit.Form getComponentForm() -> S
    void repaint(com.sun.lwuit.Component) -> g
    void repaint() -> T
    void repaint(int,int,int,int) -> a
    void keyPressed(int) -> b
    void keyReleased(int) -> a
    void keyRepeated(int) -> k
    int getScrollAnimationSpeed() -> U
    boolean isSmoothScrolling() -> V
    void setSmoothScrolling(boolean) -> c_
    void pointerHover(int[],int[]) -> a
    void pointerDragged(int,int) -> e
    void pointerPressed(int,int) -> a
    void pointerReleased(int,int) -> b
    com.sun.lwuit.plaf.Style getStyle() -> W
    void setStyle(com.sun.lwuit.plaf.Style) -> a
    void requestFocus() -> X
    java.lang.String toString() -> toString
    java.lang.String paramString() -> q
    boolean isDragActivated() -> Y
    void checkAnimation() -> Z
    boolean animate() -> a
    void setFixedPosition(boolean) -> j
    void scrollRectToVisible(com.sun.lwuit.geom.Rectangle,com.sun.lwuit.Component) -> a
    boolean isBorderPainted() -> e
    void setCellRenderer(boolean) -> e
    boolean isCellRenderer() -> aa
    void setIsScrollVisible(boolean) -> k
    void initComponentImpl() -> e_
    void deinitializeImpl() -> h
    void initComponent() -> ab
    boolean isInitialized() -> ac
    void styleChanged$31ffb340(java.lang.String) -> b
    boolean isEnabled() -> ad
    void onEditComplete(java.lang.String) -> c
com.sun.lwuit.Container -> j:
    com.sun.lwuit.layouts.Layout layout -> a
    java.util.Vector components -> b
    boolean shouldLayout -> c
    boolean scrollableX -> d
    boolean scrollableY -> e
    java.util.Vector cmpTransitions -> f
    void setLayout(com.sun.lwuit.layouts.Layout) -> a
    void setShouldCalcPreferredSize(boolean) -> a_
    int getLayoutWidth() -> d
    int getLayoutHeight() -> e
    com.sun.lwuit.Container getScrollableParent() -> t
    void addComponent(com.sun.lwuit.Component) -> a
    void addComponent(java.lang.Object,com.sun.lwuit.Component) -> a
    void insertComponentAt(int,com.sun.lwuit.Component) -> a
    boolean isParentOf(com.sun.lwuit.Component) -> h
    boolean requestFocusChild() -> u
    void replace(com.sun.lwuit.Component,com.sun.lwuit.Component) -> a
    void initComponentImpl() -> e_
    void removeComponent(com.sun.lwuit.Component) -> b
    void deinitializeImpl() -> h
    void revalidate() -> i
    void paint(com.sun.lwuit.Graphics) -> a
    void layoutContainer() -> n
    void doLayout() -> o
    int getComponentCount() -> p
    com.sun.lwuit.Component getComponentAt(int) -> c
    boolean contains(com.sun.lwuit.Component) -> c
    void scrollComponentToVisible(com.sun.lwuit.Component) -> d
    com.sun.lwuit.Component getComponentAt(int,int) -> c
    void pointerHover(int[],int[]) -> a
    void pointerPressed(int,int) -> a
    com.sun.lwuit.geom.Dimension calcPreferredSize() -> l
    java.lang.String paramString() -> q
    java.lang.String getComponentsNames() -> v
    boolean isScrollableX() -> r
    boolean isScrollableY() -> s
    void setScrollableX(boolean) -> b_
    void setScrollableY(boolean) -> c
    void setScrollable(boolean) -> d
    void setCellRenderer(boolean) -> e
    java.lang.String getUIID() -> a_
    java.util.Vector access$000(com.sun.lwuit.Container) -> a
    java.util.Vector access$002(com.sun.lwuit.Container,java.util.Vector) -> a
com.sun.lwuit.Dialog -> bq:
    boolean disposed -> g
    long time -> h
    com.sun.lwuit.Command lastCommandPressed -> i
    boolean menu -> j
    int dialogType -> k
    int top -> l
    int bottom -> m
    int left -> n
    int right -> o
    boolean includeTitle -> p
    boolean autoDispose -> q
    boolean modal -> r
    void setDialogStyle(com.sun.lwuit.plaf.Style) -> c
    void initLaf(com.sun.lwuit.plaf.LookAndFeel) -> a
    com.sun.lwuit.Command show(int,int,int,int,boolean) -> a
    com.sun.lwuit.Command show(int,int,int,int,boolean,boolean) -> b
    boolean show(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    com.sun.lwuit.Command show(java.lang.String,com.sun.lwuit.Component,com.sun.lwuit.Command[]) -> a
    com.sun.lwuit.Command show$68548691(java.lang.String,com.sun.lwuit.Component,com.sun.lwuit.Command[],int,com.sun.lwuit.Image,long,com.sun.lwuit.animations.Transition) -> a
    void onShow() -> aq
    void show() -> ap
    void dispose() -> as
    void actionCommand(com.sun.lwuit.Command) -> c
    boolean animate() -> a
    void sizeChanged(int,int) -> f
    boolean isMenu() -> aD
    void setMenu(boolean) -> m
    void addSelectCommand() -> aA
    boolean isDisposed() -> aE
com.sun.lwuit.Display -> ae:
    com.sun.lwuit.Graphics lwuitGraphics -> b
    int framerateLock -> c
    com.sun.lwuit.Display INSTANCE -> d
    int transitionDelay -> e
    com.sun.lwuit.impl.LWUITImplementation impl -> f
    java.util.Vector pendingSerialCalls -> g
    java.lang.Thread edt -> h
    java.util.Vector animationQueue -> i
    boolean thirdSoftButton -> j
    boolean editingText -> k
    java.lang.Object lock -> a
    java.util.Vector inputEvents -> l
    boolean keyRepeatCharged -> m
    boolean longPressCharged -> n
    int longPressInterval -> o
    long nextKeyRepeatEvent -> p
    int keyRepeatValue -> q
    int keyRepeatInitialIntervalTime -> r
    int keyRepeatNextIntervalTime -> s
    boolean block -> t
    int dragActivationCounter -> u
    long time -> v
    int lastKeyPressed -> w
    void init(java.lang.Object) -> a
    com.sun.lwuit.Display getInstance() -> a
    com.sun.lwuit.impl.LWUITImplementation getImplementation() -> b
    boolean isEdt() -> c
    void playDialogSound(int) -> a
    void callSerially(java.lang.Runnable) -> a
    void callSeriallyAndWait(java.lang.Runnable) -> b
    void flushEdt() -> d
    void restoreMenu(com.sun.lwuit.Form) -> b
    void paintTransitionAnimation() -> m
    void mainEDTLoop() -> e
    void edtLoopImpl() -> n
    boolean hasNoSerialCallsPending() -> o
    void onEditingComplete(com.sun.lwuit.Component,java.lang.String) -> a
    void processSerialCalls() -> p
    void invokeAndBlock(java.lang.Runnable) -> c
    void setCurrent(com.sun.lwuit.Form) -> a
    void initTransition(com.sun.lwuit.animations.Transition,com.sun.lwuit.Form,com.sun.lwuit.Form) -> a
    void setCurrentForm(com.sun.lwuit.Form) -> c
    void setTransitionYield(int) -> b
    void editString(com.sun.lwuit.Component,int,int,java.lang.String) -> a
    void addInputEvent(int[]) -> a
    int[] createPointerEvent(int[],int[],int) -> a
    int[] createKeyEvent(int,boolean) -> a
    void keyPressed(int) -> c
    void keyReleased(int) -> d
    void pointerDragged(int[],int[]) -> a
    void pointerPressed(int[],int[]) -> b
    void pointerReleased(int[],int[]) -> c
    void sizeChanged(int,int) -> a
    boolean shouldEDTSleepNoFormAnimation() -> q
    int[] pointerEvent(int,int[]) -> a
    boolean shouldEDTSleep() -> r
    com.sun.lwuit.Form getCurrentUpcoming() -> f
    com.sun.lwuit.Form getCurrent() -> g
    int numColors() -> h
    int getDisplayWidth() -> i
    int getDisplayHeight() -> j
    void repaint(com.sun.lwuit.animations.Animation) -> a
    int getGameAction(int) -> e
    boolean isThirdSoftButton() -> k
    void setThirdSoftButton(boolean) -> a
    com.sun.lwuit.Display access$000() -> l
com.sun.lwuit.Display$1 -> bx:
    void run() -> run
com.sun.lwuit.EventDispatcher -> b:
    java.util.Vector listeners -> a
    java.lang.Object[] pending -> b
    java.lang.Object pendingEvent -> c
    void addListener(java.lang.Object) -> a
    void removeListener(java.lang.Object) -> b
    void fireDataChangeEvent(int,int) -> a
    void fireDataChangeSync(com.sun.lwuit.events.DataChangedListener[],int,int) -> a
    void fireActionEvent(com.sun.lwuit.events.ActionEvent) -> a
    void fireActionSync(com.sun.lwuit.events.ActionListener[],com.sun.lwuit.events.ActionEvent) -> a
    void fireFocus(com.sun.lwuit.Component) -> a
    void fireFocusSync(com.sun.lwuit.events.FocusListener[],com.sun.lwuit.Component) -> a
    void run() -> run
com.sun.lwuit.Font -> bn:
    com.sun.lwuit.Font defaultFont -> a
    java.util.Hashtable bitmapCache -> b
    com.sun.lwuit.Font getBitmapFont(java.lang.String) -> b
    com.sun.lwuit.Font createSystemFont(int,int,int) -> a
    int charsWidth(char[],int,int) -> a
    int substringWidth(java.lang.String,int,int) -> a
    int stringWidth(java.lang.String) -> a
    int charWidth(char) -> a
    int getHeight() -> a
    com.sun.lwuit.Font getDefaultFont() -> c
    void drawChars(com.sun.lwuit.Graphics,char[],int,int,int,int) -> a
com.sun.lwuit.Form -> bo:
    com.sun.lwuit.Container contentPane -> g
    com.sun.lwuit.Label title -> h
    com.sun.lwuit.Form$MenuBar menuBar -> i
    com.sun.lwuit.Popup current -> j
    com.sun.lwuit.Command selectCommand -> k
    com.sun.lwuit.Component dragged -> l
    com.sun.lwuit.Command backCommand -> m
    com.sun.lwuit.Command clearCommand -> n
    java.util.Vector animatableComponents -> o
    int leftSK -> a
    int rightSK -> b
    int rightSK2 -> c
    int backSK -> d
    int clearSK -> e
    int backspaceSK -> f
    com.sun.lwuit.Component lastFocused -> p
    com.sun.lwuit.Component focused -> q
    com.sun.lwuit.Component focusCycleRoot -> r
    com.sun.lwuit.animations.Transition transitionInAnimator -> s
    com.sun.lwuit.animations.Transition transitionOutAnimator -> t
    com.sun.lwuit.Form previousForm -> u
    boolean tint -> v
    int tintColor -> w
    java.util.Vector focusDownSequence -> x
    java.util.Vector focusRightSequence -> y
    boolean cyclicFocus -> z
    void sizeChanged(int,int) -> f
    com.sun.lwuit.Painter getGlassPane() -> t
    void setTitleStyle(com.sun.lwuit.plaf.Style) -> b
    com.sun.lwuit.Label getTitleComponent() -> u
    com.sun.lwuit.Button getSoftButton(int) -> d
    com.sun.lwuit.plaf.Style getTitleStyle() -> v
    com.sun.lwuit.Form getPreviousForm() -> ae
    void initLaf(com.sun.lwuit.plaf.LookAndFeel) -> a
    void clearFocusVectors() -> af
    void setDraggedComponent(com.sun.lwuit.Component) -> h
    void initFocusRight() -> aD
    void initFocusDown() -> aE
    com.sun.lwuit.Component findScrollableAncestor(com.sun.lwuit.Component) -> l
    boolean isInSameColumn(com.sun.lwuit.Component,com.sun.lwuit.Component) -> b
    boolean isInSameRow(com.sun.lwuit.Component,com.sun.lwuit.Component) -> c
    com.sun.lwuit.Command getDefaultCommand() -> ag
    void setClearCommand(com.sun.lwuit.Command) -> a
    com.sun.lwuit.Command getClearCommand() -> ah
    void setBackCommand(com.sun.lwuit.Command) -> b
    com.sun.lwuit.Command getBackCommand() -> ai
    void findAllFocusable(com.sun.lwuit.Container,java.util.Vector,boolean) -> a
    java.lang.String getUIID() -> a_
    com.sun.lwuit.Container getContentPane() -> aj
    void setLayout(com.sun.lwuit.layouts.Layout) -> a
    void setTitle(java.lang.String) -> a
    void addComponent(com.sun.lwuit.Component) -> a
    void addComponent(java.lang.Object,com.sun.lwuit.Component) -> a
    void removeComponent(com.sun.lwuit.Component) -> b
    boolean hasMedia() -> ak
    void registerAnimated(com.sun.lwuit.animations.Animation) -> a
    void deregisterAnimated(com.sun.lwuit.animations.Animation) -> b
    int getFocusPosition(com.sun.lwuit.Component) -> i
    void repaintAnimations() -> al
    boolean hasAnimations() -> am
    void paintBackground(com.sun.lwuit.Graphics) -> d
    com.sun.lwuit.animations.Transition getTransitionInAnimator() -> an
    void setTransitionInAnimator(com.sun.lwuit.animations.Transition) -> a
    com.sun.lwuit.animations.Transition getTransitionOutAnimator() -> ao
    void setTransitionOutAnimator(com.sun.lwuit.animations.Transition) -> b
    void actionCommand(com.sun.lwuit.Command) -> c
    void actionCommandImpl(com.sun.lwuit.Command) -> f
    void initFocused() -> aF
    void show() -> ap
    void setSmoothScrolling(boolean) -> c_
    boolean isSmoothScrolling() -> V
    int getScrollAnimationSpeed() -> U
    void onShow() -> aq
    void showModal(int,int,int,int,boolean,boolean) -> a
    void showModal() -> ar
    void showDialog(boolean) -> l
    void dispose() -> as
    void disposeImpl() -> at
    void repaint(com.sun.lwuit.Component) -> g
    com.sun.lwuit.Form getComponentForm() -> S
    void restoreMenu() -> au
    void setFocused(com.sun.lwuit.Component) -> j
    com.sun.lwuit.Component getFocused() -> av
    void keyPressed(int) -> b
    void keyReleased(int) -> a
    void fireKeyEvent(java.util.Hashtable,int) -> a
    void keyRepeated(int) -> k
    void pointerPressed(int,int) -> a
    void pointerDragged(int,int) -> e
    void pointerHover(int[],int[]) -> a
    boolean isSingleFocusMode() -> aw
    void pointerReleased(int,int) -> b
    void setScrollableY(boolean) -> c
    void setScrollableX(boolean) -> b_
    void addCommand(com.sun.lwuit.Command,int) -> a
    int getCommandCount() -> ax
    com.sun.lwuit.Command getCommand(int) -> l
    void addCommand(com.sun.lwuit.Command) -> d
    void removeCommand(com.sun.lwuit.Command) -> e
    void scrollComponentToVisible(com.sun.lwuit.Component) -> d
    void removeAllCommands() -> ay
    void requestFocus(com.sun.lwuit.Component) -> k
    void paint(com.sun.lwuit.Graphics) -> a
    void setScrollable(boolean) -> d
    void showPopup(com.sun.lwuit.Popup) -> a
    void hidePopups() -> az
    void setVisible(boolean) -> f
    void addSelectCommand() -> aA
    void removeSelectCommand() -> aB
    java.lang.String paramString() -> q
    com.sun.lwuit.Command showMenuDialog(com.sun.lwuit.Dialog) -> a
    boolean isReverseSoftButtons() -> aC
    com.sun.lwuit.List createCommandList(java.util.Vector) -> a
    void access$000(com.sun.lwuit.Form,com.sun.lwuit.Command) -> a
    com.sun.lwuit.Form$MenuBar access$100(com.sun.lwuit.Form) -> a
    boolean access$202(com.sun.lwuit.Form,boolean) -> a
com.sun.lwuit.Form$MenuBar -> y:
    com.sun.lwuit.Command menuCommand -> a
    java.util.Vector commands -> b
    com.sun.lwuit.Button[] soft -> c
    com.sun.lwuit.Command[] softCommand -> d
    com.sun.lwuit.Button left -> e
    com.sun.lwuit.Button right -> f
    com.sun.lwuit.Button main -> g
    com.sun.lwuit.list.ListCellRenderer menuCellRenderer -> h
    com.sun.lwuit.animations.Transition transitionIn -> i
    com.sun.lwuit.animations.Transition transitionOut -> j
    com.sun.lwuit.List commandList -> k
    com.sun.lwuit.Command selectMenuItem -> l
    com.sun.lwuit.Command cancelMenuItem -> m
    com.sun.lwuit.plaf.Style menuStyle -> n
    com.sun.lwuit.Form this$0 -> o
    void updateCommands() -> ae
    void actionPerformed(com.sun.lwuit.events.ActionEvent) -> a
    com.sun.lwuit.Button createSoftButton() -> af
    void updateSoftButtonStyle(com.sun.lwuit.Button) -> a
    void setStyle(com.sun.lwuit.plaf.Style) -> a
    com.sun.lwuit.geom.Dimension calcPreferredSize() -> l
    void showMenu() -> ag
    com.sun.lwuit.Button[] getSoftButtons() -> t
    java.lang.String getUIID() -> a_
    void addCommand(com.sun.lwuit.Command) -> a
    com.sun.lwuit.Command getCommand(int) -> d
    int getCommandCount() -> u
    void addCommand(com.sun.lwuit.Command,int) -> a
    void removeAllCommands() -> v
    void removeCommand(com.sun.lwuit.Command) -> b
    void keyPressed(int) -> b
    void keyReleased(int) -> a
com.sun.lwuit.Graphics -> e:
    int xTranslate -> a
    int yTranslate -> b
    com.sun.lwuit.Font current -> c
    com.sun.lwuit.impl.LWUITImplementation impl -> d
    java.lang.Object nativeGraphics -> e
    void setGraphics(java.lang.Object) -> a
    void translate(int,int) -> a
    int getTranslateX() -> a
    int getTranslateY() -> b
    int getColor() -> c
    void setColor(int) -> a
    void setFont(com.sun.lwuit.Font) -> a
    int getClipX() -> d
    int getClipY() -> e
    int getClipWidth() -> f
    int getClipHeight() -> g
    void clipRect(int,int,int,int) -> a
    void setClip(int,int,int,int) -> b
    void drawLine(int,int,int,int) -> c
    void fillRect(int,int,int,int) -> d
    void drawRect(int,int,int,int) -> e
    void drawRoundRect(int,int,int,int,int,int) -> a
    void lighterColor(int) -> b
    void darkerColor(int) -> c
    void fillRoundRect(int,int,int,int,int,int) -> b
    void fillArc(int,int,int,int,int,int) -> c
    void drawArc(int,int,int,int,int,int) -> d
    void drawString(java.lang.String,int,int) -> a
    void drawChar(char,int,int) -> a
    void drawImage(com.sun.lwuit.Image,int,int) -> a
    void drawImage(java.lang.Object,int,int,int) -> a
    void fillTriangle(int,int,int,int,int,int) -> e
    void drawRGB(int[],int,int,int,int,int,boolean) -> a
    void fillRadialGradient(int,int,int,int,int,int) -> f
    void fillLinearGradient(int,int,int,int,int,int,boolean) -> a
    void fillRect(int,int,int,int,byte) -> a
    java.lang.String getSymbol(int) -> d
com.sun.lwuit.Image -> br:
    java.lang.ref.WeakReference rgbCache -> a
    java.lang.Object image -> b
    int transform -> c
    boolean opaqueTested -> d
    boolean opaque -> e
    java.util.Hashtable scaleCache -> f
    com.sun.lwuit.Image getCachedImage(com.sun.lwuit.geom.Dimension) -> a
    void cacheImage(com.sun.lwuit.geom.Dimension,com.sun.lwuit.Image) -> a
    com.sun.lwuit.Image createImage(java.lang.String) -> a
    com.sun.lwuit.Image createImage(java.io.InputStream) -> a
    com.sun.lwuit.Image createImage(int,int) -> c
    com.sun.lwuit.Image createImage(int,int,int) -> a
    com.sun.lwuit.Graphics getGraphics() -> b
    int getWidth() -> c
    int getHeight() -> d
    void drawImage(com.sun.lwuit.Graphics,int,int) -> a
    void getRGB(int[],int,int,int,int,int) -> a
    int[] getRGB() -> h
    int[] getRGBImpl() -> e
    com.sun.lwuit.Image scaled(int,int) -> b
    void scale(int,int) -> a
    boolean scaleArray(int,int,int,int,int[],int[]) -> a
    boolean isAnimation() -> f
    boolean isOpaque() -> i
com.sun.lwuit.IndexedImage -> aa:
    int width -> d
    int height -> e
    byte[] imageDataByte -> a
    int[] palette -> b
    int[] lineCache -> c
    com.sun.lwuit.Graphics getGraphics() -> b
    void getRGB(int[],int,int,int,int,int) -> a
    void drawImage(com.sun.lwuit.Graphics,int,int) -> a
    int getWidth() -> c
    int getHeight() -> d
    void scale(int,int) -> a
    com.sun.lwuit.Image scaled(int,int) -> b
    byte[] scaleArray(byte[],int,int) -> a
    int[] getRGBImpl() -> e
com.sun.lwuit.Label -> bm:
    java.lang.String text -> a
    com.sun.lwuit.Image icon -> b
    int align -> c
    int valign -> d
    int textPosition -> e
    java.lang.String id -> f
    int gap -> g
    int shiftText -> h
    boolean tickerRunning -> i
    boolean tickerEnabled -> j
    long tickerStartTime -> k
    long tickerDelay -> l
    boolean rightToLeft -> m
    boolean endsWith3Points -> n
    void setText(java.lang.String) -> a
    void localize() -> d
    void initComponentImpl() -> e_
    java.lang.String getText() -> o
    void setIcon(com.sun.lwuit.Image) -> a
    void checkAnimation() -> Z
    com.sun.lwuit.Image getIcon() -> p
    void setAlignment(int) -> c
    int getVerticalAlignment() -> t
    int getAlignment() -> u
    int getTextPosition() -> v
    int getGap() -> ae
    java.lang.String getUIID() -> a_
    java.lang.String paramString() -> q
    void paint(com.sun.lwuit.Graphics) -> a
    com.sun.lwuit.geom.Dimension calcPreferredSize() -> l
    int getShiftText() -> af
    void setShiftText(int) -> d
    void startTicker(long,boolean) -> a
    void stopTicker() -> ag
    boolean isTickerRunning() -> ah
    void setEndsWith3Points(boolean) -> l
    boolean isEndsWith3Points() -> ai
    boolean animate() -> a
com.sun.lwuit.List -> be:
    int fixedSelection -> a
    com.sun.lwuit.list.ListModel model -> b
    com.sun.lwuit.list.ListCellRenderer renderer -> c
    int orientation -> d
    com.sun.lwuit.EventDispatcher dispatcher -> e
    com.sun.lwuit.geom.Dimension elemSize -> f
    com.sun.lwuit.geom.Dimension selectedElemSize -> g
    boolean inputOnFocus -> h
    boolean numericKeyActions -> i
    boolean paintFocusBehindList -> j
    int itemGap -> k
    com.sun.lwuit.List$Listeners listener -> l
    int animationPosition -> m
    int destination -> n
    com.sun.lwuit.animations.Motion listMotion -> o
    boolean fireOnClick -> p
    void initComponentImpl() -> e_
    void deinitializeImpl() -> h
    void initComponent() -> ab
    boolean isScrollableY() -> s
    boolean isScrollableX() -> r
    int size() -> o
    int getSelectedIndex() -> p
    void setSelectedIndex(int) -> c
    void setSelectedIndex(int,boolean) -> a
    java.lang.Object getSelectedItem() -> d
    com.sun.lwuit.list.ListModel getModel() -> e
    void dataChanged(int,int) -> c
    void bindListeners() -> t
    void setModel(com.sun.lwuit.list.ListModel) -> a
    void setListCellRenderer(com.sun.lwuit.list.ListCellRenderer) -> a
    com.sun.lwuit.list.ListCellRenderer getRenderer() -> i
    void scrollRectToVisible(com.sun.lwuit.geom.Rectangle) -> b
    void setHandlesInput(boolean) -> b
    void fireClicked() -> j
    boolean isSelectableInteraction() -> k
    void keyReleased(int) -> a
    void keyPressed(int) -> b
    void selectElement(int) -> l
    void calculateComponentPosition(int,int,com.sun.lwuit.geom.Rectangle,com.sun.lwuit.geom.Dimension,com.sun.lwuit.geom.Dimension,boolean) -> a
    int recalcOffset(int,int,int,int) -> b
    void paint(com.sun.lwuit.Graphics) -> a
    void paintFocus(com.sun.lwuit.Graphics,int,com.sun.lwuit.geom.Rectangle,com.sun.lwuit.geom.Dimension) -> a
    void renderComponent(com.sun.lwuit.Graphics,com.sun.lwuit.Component,int,int,int,int) -> a
    java.lang.String getUIID() -> a_
    void addActionListener(com.sun.lwuit.events.ActionListener) -> a
    void removeActionListener(com.sun.lwuit.events.ActionListener) -> b
    void fireActionEvent() -> g
    void setInputOnFocus(boolean) -> d
    void focusGainedInternal() -> b
    void focusLostInternal() -> c
    int getItemGap() -> n
    com.sun.lwuit.geom.Dimension getElementSize(boolean) -> l
    com.sun.lwuit.geom.Dimension calculateElementSize(boolean) -> m
    void pointerDragged(int,int) -> e
    int pointerSelect(int,int) -> f
    void pointerReleased(int,int) -> b
    com.sun.lwuit.geom.Dimension calcPreferredSize() -> l
    void setFixedSelection(int) -> d
    boolean animate() -> a
    java.lang.String paramString() -> q
com.sun.lwuit.List$Listeners -> av:
    com.sun.lwuit.List this$0 -> a
    void dataChanged(int,int) -> a
    void selectionChanged$255f295() -> a
com.sun.lwuit.Painter -> aq:
    com.sun.lwuit.Form parent -> a
    com.sun.lwuit.Form previousTint -> b
    boolean ignorCoordinates -> c
    com.sun.lwuit.Painter painter -> d
    com.sun.lwuit.Component this$0 -> e
    void paint(com.sun.lwuit.Graphics,com.sun.lwuit.geom.Rectangle) -> a
    void setIgnorCoordinates(boolean) -> a
    void setPreviousForm(com.sun.lwuit.Form) -> a
com.sun.lwuit.Popup -> ar:
    com.sun.lwuit.Component contents -> a
    boolean visible -> b
    com.sun.lwuit.Form owner -> c
    void setVisible(boolean) -> a
    com.sun.lwuit.Component getContents() -> a
com.sun.lwuit.RGBImage -> bs:
    int width -> a
    int height -> b
    int[] rgb -> c
    com.sun.lwuit.Image scaled(int,int) -> b
    void scale(int,int) -> a
    com.sun.lwuit.Graphics getGraphics() -> b
    int[] getRGB() -> h
    void getRGB(int[],int,int,int,int,int) -> a
    void drawImage(com.sun.lwuit.Graphics,int,int) -> a
    boolean isOpaque() -> i
    int getWidth() -> c
    int getHeight() -> d
com.sun.lwuit.RadioButton -> bj:
    boolean selected -> a
    java.lang.String toString() -> toString
    java.lang.String getUIID() -> a_
    boolean isSelected() -> n
    void setSelected(boolean) -> d
    void released() -> i
    void paint(com.sun.lwuit.Graphics) -> a
    com.sun.lwuit.geom.Dimension calcPreferredSize() -> l
    void fireActionEvent() -> g
com.sun.lwuit.RunnableWrapper -> ad:
    boolean done -> a
    java.lang.Runnable internal -> b
    int type -> c
    java.lang.RuntimeException err -> d
    com.sun.lwuit.Form parentForm -> e
    com.sun.lwuit.Painter paint -> f
    java.lang.RuntimeException getErr() -> a
    boolean isDone() -> b
    void run() -> run
com.sun.lwuit.StaticAnimation -> ab:
    com.sun.lwuit.StaticAnimation$Frame[] frames -> d
    int currentFrame -> e
    long animationStartTime -> f
    int totalAnimationTime -> g
    boolean loop -> h
    boolean animate() -> a
    void paint(com.sun.lwuit.Graphics) -> a
    void drawImage(com.sun.lwuit.Graphics,int,int) -> a
    void scale(int,int) -> a
    com.sun.lwuit.Image scaled(int,int) -> b
    boolean isAnimation() -> f
    com.sun.lwuit.geom.Rectangle getDirtyRegion() -> g
com.sun.lwuit.StaticAnimation$Frame -> v:
    int time -> d
    byte[] keyFrame -> e
    byte[][] modifiedRows -> f
    int[] modifiedRowOffsets -> a
    int smallestChangedRow -> b
    int highestChangedRow -> c
    void initArrays(java.util.Vector,java.util.Vector) -> a
    int getTime() -> a
    byte[] access$100(com.sun.lwuit.StaticAnimation$Frame) -> a
    byte[] access$200(com.sun.lwuit.StaticAnimation$Frame,int) -> a
com.sun.lwuit.SystemFont -> ac:
    java.lang.Object font -> b
    com.sun.lwuit.Font defaultFont -> a
    int charWidth(char) -> a
    int charsWidth(char[],int,int) -> a
    int substringWidth(java.lang.String,int,int) -> a
    int stringWidth(java.lang.String) -> a
    int getHeight() -> a
    void drawChars(com.sun.lwuit.Graphics,char[],int,int,int,int) -> a
    java.lang.Object getNativeFont() -> b
com.sun.lwuit.TextArea -> at:
    int defaultMaxSize -> a
    boolean autoDegradeMaxSize -> b
    boolean hadSuccessfulEdit -> c
    int linesToScroll -> d
    java.lang.String unsupportedChars -> e
    int constraint -> f
    java.lang.String text -> g
    boolean editable -> h
    int maxSize -> i
    int rows -> j
    int columns -> k
    java.lang.String id -> l
    java.util.Vector rowStrings -> m
    int widthForRowCalculations -> n
    int rowsGap -> o
    boolean triggerClose -> p
    java.util.Vector actionListeners -> q
    boolean growByContent -> r
    char widestChar -> s
    int getConstraint() -> d
    void setText(java.lang.String) -> a
    java.lang.String getText() -> e
    boolean isEditable() -> i
    void setEditable(boolean) -> d
    void keyPressed(int) -> b
    void fireClicked() -> j
    boolean isSelectableInteraction() -> k
    void keyReleased(int) -> a
    boolean isScrollableY() -> s
    void paintScrollbarY(com.sun.lwuit.Graphics) -> c
    void onClick() -> n
    void editString() -> o
    void pointerReleased(int,int) -> b
    void focusGainedInternal() -> b
    void focusLostInternal() -> c
    int getColumns() -> p
    int getRows() -> t
    java.lang.String getUIID() -> a_
    void initComponentImpl() -> e_
    java.util.Vector getRowStrings() -> ae
    int getLines() -> u
    java.lang.String getTextAt(int) -> c
    int indexOf(char[],char,int,int) -> a
    int getRowsGap() -> v
    void paint(com.sun.lwuit.Graphics) -> a
    com.sun.lwuit.geom.Dimension calcPreferredSize() -> l
    void addActionListener(com.sun.lwuit.events.ActionListener) -> a
    void fireActionEvent() -> g
    void onEditComplete(java.lang.String) -> c
    void setGrowByContent(boolean) -> l
com.sun.lwuit.TextField -> bt:
    boolean replaceMenuDefault -> a
    long cursorBlinkTime -> b
    boolean drawCursor -> c
    int cursorCharPosition -> d
    boolean pressedAndNotReleased -> e
    long pressTime -> f
    boolean useSoftkeys -> g
    long releaseTime -> h
    java.lang.String previousText -> i
    int commitTimeout -> j
    boolean pendingCommit -> k
    int pressCount -> l
    int lastKeyCode -> m
    int pressedKeyCode -> n
    java.lang.String clearText -> o
    java.lang.String t9Text -> p
    boolean longClick -> q
    com.sun.lwuit.Command originalClearCommand -> r
    java.util.Hashtable inputModes -> s
    java.lang.String inputMode -> t
    java.lang.String[] defaultInputModeOrder -> u
    java.lang.String[] inputModeOrder -> v
    java.util.Vector firstUppercaseInputMode -> w
    int blinkOnTime -> x
    int blinkOffTime -> y
    boolean qwertyAutoDetect -> z
    boolean qwertyDevice -> A
    boolean qwerty -> B
    boolean replaceMenu -> C
    com.sun.lwuit.Command[] originalCommands -> D
    com.sun.lwuit.EventDispatcher listeners -> E
    int defaultChangeInputModeKey -> F
    com.sun.lwuit.Command selectCommand -> G
    com.sun.lwuit.Command DELETE_COMMAND -> H
    com.sun.lwuit.Command T9_COMMAND -> I
    char[] DEFAULT_SYMBOL_TABLE -> J
    char[] symbolTable -> K
    java.lang.String[] DEFAULT_KEY_CODES -> L
    void deleteChar() -> ae
    java.lang.String getUIID() -> a_
    void commitChange() -> aj
    boolean isPendingCommit() -> af
    void setInputMode(java.lang.String) -> e
    java.lang.String getInputMode() -> ag
    java.lang.String[] getInputModeOrder() -> ah
    java.lang.String pickLowerOrUpper(java.lang.String) -> f
    void onClick() -> n
    void setCursorPosition(int) -> d
    int getCursorPosition() -> ai
    void setText(java.lang.String) -> a
    boolean isClearKey(int) -> l
    boolean keyReleaseOrLongClick(int,boolean) -> a
    void insertChars(java.lang.String) -> d
    void showSymbolDialog() -> ak
    void keyReleased(int) -> a
    void setEditable(boolean) -> d
    void keyPressed(int) -> b
    com.sun.lwuit.Command installCommands(com.sun.lwuit.Command,com.sun.lwuit.Command) -> a
    boolean isSelectableInteraction() -> k
    void fireClicked() -> j
    void removeCommands(com.sun.lwuit.Command,com.sun.lwuit.Command,com.sun.lwuit.Command) -> a
    void focusLostInternal() -> c
    void focusGainedInternal() -> b
    void paint(com.sun.lwuit.Graphics) -> a
    com.sun.lwuit.geom.Dimension calcPreferredSize() -> l
    void initComponent() -> ab
    boolean animate() -> a
    void pointerReleased(int,int) -> b
    void fireDataChanged(int,int) -> c
    void onEditComplete(java.lang.String) -> c
com.sun.lwuit.TextField$1 -> bb:
    com.sun.lwuit.TextField this$0 -> a
    void actionPerformed(com.sun.lwuit.events.ActionEvent) -> a
com.sun.lwuit.TextField$2 -> am:
    com.sun.lwuit.TextField this$0 -> a
    void actionPerformed(com.sun.lwuit.events.ActionEvent) -> a
com.sun.lwuit.TextField$3 -> ak:
    com.sun.lwuit.TextField this$0 -> a
    void actionPerformed(com.sun.lwuit.events.ActionEvent) -> a
com.sun.lwuit.animations.Animation -> az:
    boolean animate() -> a
    void paint(com.sun.lwuit.Graphics) -> a
com.sun.lwuit.animations.CommonTransitions -> bg:
    com.sun.lwuit.animations.Motion motion -> a
    int slideType -> b
    int speed -> c
    int position -> d
    int transitionType -> e
    com.sun.lwuit.Image buffer -> f
    com.sun.lwuit.RGBImage rgbBuffer -> g
    boolean forward -> h
    boolean drawDialogMenu -> i
    boolean firstFinished -> j
    com.sun.lwuit.animations.CommonTransitions createEmpty() -> g
    com.sun.lwuit.animations.CommonTransitions createSlide(int,boolean,int,boolean) -> a
    void initTransition() -> b
    boolean animate() -> a
    void paint(com.sun.lwuit.Graphics) -> a
    void cleanup() -> e
    void paintSlideAtPosition(com.sun.lwuit.Graphics,int,int) -> a
    void paint(com.sun.lwuit.Graphics,com.sun.lwuit.Component,int,int) -> a
    com.sun.lwuit.animations.Transition copy() -> f
com.sun.lwuit.animations.Motion -> s:
    int motionType -> a
    int sourceValue -> b
    int destinationValue -> c
    int duration -> d
    long startTime -> e
    float initVelocity -> f
    float friction -> g
    com.sun.lwuit.animations.Motion createLinearMotion(int,int,int) -> a
    com.sun.lwuit.animations.Motion createSplineMotion(int,int,int) -> b
    com.sun.lwuit.animations.Motion createFrictionMotion(int,float,float) -> a
    void start() -> a
    boolean isFinished() -> b
    int getValue() -> c
com.sun.lwuit.animations.Transition -> ai:
    com.sun.lwuit.Component source -> a
    com.sun.lwuit.Component destination -> b
    void init(com.sun.lwuit.Component,com.sun.lwuit.Component) -> a
    void initTransition() -> b
    com.sun.lwuit.Component getDestination() -> c
    com.sun.lwuit.Component getSource() -> d
    void cleanup() -> e
    com.sun.lwuit.animations.Transition copy() -> f
    boolean animate() -> a
    void paint(com.sun.lwuit.Graphics) -> a
com.sun.lwuit.events.ActionEvent -> ao:
    java.lang.Object source -> a
    java.lang.Object getSource() -> a
com.sun.lwuit.events.ActionListener -> ba:
    void actionPerformed(com.sun.lwuit.events.ActionEvent) -> a
com.sun.lwuit.events.DataChangedListener -> n:
    void dataChanged(int,int) -> a
com.sun.lwuit.events.FocusListener -> bc:
    void focusGained(com.sun.lwuit.Component) -> b
    void focusLost(com.sun.lwuit.Component) -> c
com.sun.lwuit.events.SelectionListener -> af:
    void selectionChanged$255f295() -> a
com.sun.lwuit.events.StyleListener -> d:
    void styleChanged$31ffb340(java.lang.String) -> b
com.sun.lwuit.geom.Dimension -> au:
    int width -> a
    int height -> b
    void setWidth(int) -> a
    void setHeight(int) -> b
    int getWidth() -> a
    int getHeight() -> b
    java.lang.String toString() -> toString
com.sun.lwuit.geom.Rectangle -> ap:
    int x -> a
    int y -> b
    com.sun.lwuit.geom.Dimension size -> c
    com.sun.lwuit.geom.Dimension getSize() -> a
    int getX() -> b
    int getY() -> c
    java.lang.String toString() -> toString
    void setX(int) -> a
    void setY(int) -> b
    boolean contains(com.sun.lwuit.geom.Rectangle) -> a
    boolean contains(int,int,int,int) -> a
    boolean contains(int,int) -> a
    boolean intersects(int,int,int,int) -> b
    boolean intersects(int,int,int,int,int,int,int,int) -> a
com.sun.lwuit.impl.ImplementationFactory -> cb:
    com.sun.lwuit.impl.ImplementationFactory instance -> a
    com.sun.lwuit.impl.LWUITImplementation createImplementation() -> a
com.sun.lwuit.impl.LWUITImplementation -> o:
    com.sun.lwuit.Form currentForm -> a
    java.lang.Object displayLock -> b
    com.sun.lwuit.animations.Animation[] paintQueue -> c
    com.sun.lwuit.animations.Animation[] paintQueueTemp -> d
    int paintQueueFill -> e
    com.sun.lwuit.Graphics lwuitGraphics -> f
    int[] xPointerEvent -> g
    int[] yPointerEvent -> h
    void init(java.lang.Object) -> a
    void playDialogSound(int) -> d
    int getDisplayWidth() -> a
    int getDisplayHeight() -> b
    void editString(com.sun.lwuit.Component,int,int,java.lang.String) -> a
    boolean hasPendingPaints() -> m
    int numColors() -> i
    void paintDirty() -> n
    void flushGraphics(int,int,int,int) -> a
    void flushGraphics() -> c
    void setLWUITGraphics(com.sun.lwuit.Graphics) -> a
    void setDisplayLock(java.lang.Object) -> k
    java.lang.Object getDisplayLock() -> o
    void repaint(com.sun.lwuit.animations.Animation) -> a
    void getRGB(java.lang.Object,int[],int,int,int,int,int) -> a
    java.lang.Object createImage(java.lang.String) -> a
    java.lang.Object createImage(java.io.InputStream) -> a
    java.lang.Object createMutableImage(int,int,int) -> a
    int getImageWidth(java.lang.Object) -> b
    int getImageHeight(java.lang.Object) -> c
    java.lang.Object scale(java.lang.Object,int,int) -> a
    int[] getSoftkeyCode(int) -> a
    int getClearKeyCode() -> d
    int getBackspaceKeyCode() -> e
    int getBackKeyCode() -> f
    int getGameAction(int) -> b
    boolean isTouchDevice() -> g
    void setCurrentForm(com.sun.lwuit.Form) -> a
    void confirmControlView() -> j
    com.sun.lwuit.Form getCurrentForm() -> p
    int getColor(java.lang.Object) -> h
    void setColor(java.lang.Object,int) -> a
    void setAlpha$4cfcfd12(int) -> c
    int getAlpha$5d527804() -> h
    void setNativeFont(java.lang.Object,java.lang.Object) -> a
    int getClipX(java.lang.Object) -> d
    int getClipY(java.lang.Object) -> e
    int getClipWidth(java.lang.Object) -> f
    int getClipHeight(java.lang.Object) -> g
    void setClip(java.lang.Object,int,int,int,int) -> a
    void clipRect(java.lang.Object,int,int,int,int) -> b
    void drawLine(java.lang.Object,int,int,int,int) -> c
    void fillRect(java.lang.Object,int,int,int,int) -> d
    void drawRect(java.lang.Object,int,int,int,int) -> e
    void drawRoundRect(java.lang.Object,int,int,int,int,int,int) -> a
    void fillRoundRect(java.lang.Object,int,int,int,int,int,int) -> b
    void fillArc(java.lang.Object,int,int,int,int,int,int) -> c
    void drawArc(java.lang.Object,int,int,int,int,int,int) -> d
    void drawString(java.lang.Object,java.lang.String,int,int) -> a
    void drawImage(java.lang.Object,java.lang.Object,int,int) -> a
    void drawImageRotated(java.lang.Object,java.lang.Object,int,int,int) -> a
    void fillTriangle(java.lang.Object,int,int,int,int,int,int) -> e
    void drawRGB(java.lang.Object,int[],int,int,int,int,int,boolean) -> a
    java.lang.Object getNativeGraphics() -> k
    java.lang.Object getNativeGraphics(java.lang.Object) -> i
    int charsWidth(java.lang.Object,char[],int,int) -> a
    int stringWidth(java.lang.Object,java.lang.String) -> a
    int charWidth(java.lang.Object,char) -> a
    int getHeight(java.lang.Object) -> j
    java.lang.Object createFont(int,int,int) -> b
    void pointerDragged(int,int) -> a
    void pointerPressed(int,int) -> b
    void pointerReleased(int,int) -> c
    void fillRadialGradient(java.lang.Object,int,int,int,int,int,int) -> f
    void updateGradientColor(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    int calculateGraidentChannel(int,int,int,int) -> b
    void fillLinearGradient(java.lang.Object,int,int,int,int,int,int,boolean) -> a
    boolean checkIntersection(java.lang.Object,int,int,int,int,int,int[],int) -> a
    int markIntersectionEdge(int,int,int,int,int[],int) -> a
com.sun.lwuit.impl.midp.GameCanvasImplementation -> f:
    int[] portableKeyCodes -> a
    int[] portableKeyCodeValues -> b
    int alpha -> c
    int[] rgbArr -> d
    javax.microedition.lcdui.Canvas canvas -> e
    javax.microedition.lcdui.AlertType[] TYPES -> f
    javax.microedition.lcdui.Command CONFIRM_COMMAND -> g
    javax.microedition.lcdui.Command CANCEL_COMMAND -> h
    javax.microedition.lcdui.TextBox currentTextBox -> i
    com.sun.lwuit.Component currentTextComponent -> j
    boolean flushGraphicsBug -> k
    javax.microedition.lcdui.Display display -> l
    com.sun.lwuit.impl.midp.GameCanvasImplementation$WaitForEdit waitForEdit -> m
    int[] leftSK -> n
    int[] rightSK -> o
    int backSK -> p
    int clearSK -> q
    int backspaceSK -> r
    boolean drawNegativeOffsetsInRGB -> s
    void init(java.lang.Object) -> a
    void setKnownSoftKeyCodes() -> q
    int getDisplayWidth() -> a
    int getDisplayHeight() -> b
    void editString(com.sun.lwuit.Component,int,int,java.lang.String) -> a
    void flushGraphics(int,int,int,int) -> a
    void flushGraphics() -> c
    void getRGB(java.lang.Object,int[],int,int,int,int,int) -> a
    java.lang.Object createImage(java.lang.String) -> a
    java.lang.Object createImage(java.io.InputStream) -> a
    java.lang.Object createMutableImage(int,int,int) -> a
    int getImageWidth(java.lang.Object) -> b
    int getImageHeight(java.lang.Object) -> c
    java.lang.Object scale(java.lang.Object,int,int) -> a
    void drawImageRotated(java.lang.Object,java.lang.Object,int,int,int) -> a
    int[] getSoftkeyCode(int) -> a
    int getClearKeyCode() -> d
    int getBackspaceKeyCode() -> e
    int getBackKeyCode() -> f
    int getGameAction(int) -> b
    int getKeyCode(int) -> e
    boolean isTouchDevice() -> g
    void setNativeFont(java.lang.Object,java.lang.Object) -> a
    int getClipX(java.lang.Object) -> d
    int getClipY(java.lang.Object) -> e
    int getClipWidth(java.lang.Object) -> f
    int getClipHeight(java.lang.Object) -> g
    void setClip(java.lang.Object,int,int,int,int) -> a
    void clipRect(java.lang.Object,int,int,int,int) -> b
    void drawLine(java.lang.Object,int,int,int,int) -> c
    void fillRect(java.lang.Object,int,int,int,int) -> d
    void drawRect(java.lang.Object,int,int,int,int) -> e
    void drawRoundRect(java.lang.Object,int,int,int,int,int,int) -> a
    void fillRoundRect(java.lang.Object,int,int,int,int,int,int) -> b
    void fillArc(java.lang.Object,int,int,int,int,int,int) -> c
    void drawArc(java.lang.Object,int,int,int,int,int,int) -> d
    void setColor(java.lang.Object,int) -> a
    int getColor(java.lang.Object) -> h
    void setAlpha$4cfcfd12(int) -> c
    int getAlpha$5d527804() -> h
    void drawString(java.lang.Object,java.lang.String,int,int) -> a
    void drawImage(java.lang.Object,java.lang.Object,int,int) -> a
    void fillTriangle(java.lang.Object,int,int,int,int,int,int) -> e
    void drawRGB(java.lang.Object,int[],int,int,int,int,int,boolean) -> a
    int numColors() -> i
    void playDialogSound(int) -> d
    void confirmControlView() -> j
    java.lang.Object getNativeGraphics() -> k
    java.lang.Object getNativeGraphics(java.lang.Object) -> i
    int charsWidth(java.lang.Object,char[],int,int) -> a
    int stringWidth(java.lang.Object,java.lang.String) -> a
    int charWidth(java.lang.Object,char) -> a
    int getHeight(java.lang.Object) -> j
    java.lang.Object createFont(int,int,int) -> b
    javax.microedition.lcdui.Font font(java.lang.Object) -> l
    void access$000(com.sun.lwuit.impl.midp.GameCanvasImplementation,int) -> a
    void access$100(com.sun.lwuit.impl.midp.GameCanvasImplementation,int) -> b
    void access$200(com.sun.lwuit.impl.midp.GameCanvasImplementation,int,int) -> a
    void access$300(com.sun.lwuit.impl.midp.GameCanvasImplementation,int,int) -> b
    void access$400(com.sun.lwuit.impl.midp.GameCanvasImplementation,int,int) -> c
    void access$500(com.sun.lwuit.impl.midp.GameCanvasImplementation,int,int) -> d
    javax.microedition.lcdui.TextBox access$600(com.sun.lwuit.impl.midp.GameCanvasImplementation) -> a
    javax.microedition.lcdui.Command access$700() -> l
    com.sun.lwuit.Component access$800(com.sun.lwuit.impl.midp.GameCanvasImplementation) -> b
    javax.microedition.lcdui.TextBox access$602(com.sun.lwuit.impl.midp.GameCanvasImplementation,javax.microedition.lcdui.TextBox) -> a
    com.sun.lwuit.impl.midp.GameCanvasImplementation$WaitForEdit access$900(com.sun.lwuit.impl.midp.GameCanvasImplementation) -> c
com.sun.lwuit.impl.midp.GameCanvasImplementation$1 -> ax:
    com.sun.lwuit.impl.midp.GameCanvasImplementation this$0 -> a
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
    com.sun.lwuit.impl.midp.GameCanvasImplementation access$1000(com.sun.lwuit.impl.midp.GameCanvasImplementation$1) -> a
com.sun.lwuit.impl.midp.GameCanvasImplementation$1$1 -> bl:
    com.sun.lwuit.impl.midp.GameCanvasImplementation$1 this$1 -> a
    void run() -> run
com.sun.lwuit.impl.midp.GameCanvasImplementation$C -> aj:
    com.sun.lwuit.impl.midp.GameCanvasImplementation this$0 -> a
    javax.microedition.lcdui.Graphics getGraphics() -> getGraphics
    void keyPressed(int) -> keyPressed
    void keyReleased(int) -> keyReleased
    void pointerDragged(int,int) -> pointerDragged
    void pointerPressed(int,int) -> pointerPressed
    void pointerReleased(int,int) -> pointerReleased
    void sizeChanged(int,int) -> sizeChanged
com.sun.lwuit.impl.midp.GameCanvasImplementation$WaitForEdit -> bk:
    boolean done -> a
    com.sun.lwuit.impl.midp.GameCanvasImplementation this$0 -> b
    void run() -> run
    void setDone(boolean) -> a
com.sun.lwuit.layouts.BorderLayout -> bp:
    com.sun.lwuit.Component north -> a
    com.sun.lwuit.Component south -> b
    com.sun.lwuit.Component center -> c
    com.sun.lwuit.Component west -> d
    com.sun.lwuit.Component east -> e
    void addLayoutComponent(java.lang.Object,com.sun.lwuit.Component,com.sun.lwuit.Container) -> a
    void removeLayoutComponent(com.sun.lwuit.Component) -> a
    java.lang.Object getComponentConstraint(com.sun.lwuit.Component) -> b
    void layoutContainer(com.sun.lwuit.Container) -> a
    void positionLeftRight(com.sun.lwuit.Component,int,int,int) -> a
    void positionTopBottom(com.sun.lwuit.Component,int,int,int) -> b
    com.sun.lwuit.geom.Dimension getPreferredSize(com.sun.lwuit.Container) -> b
com.sun.lwuit.layouts.BoxLayout -> by:
    int axis -> a
    void layoutContainer(com.sun.lwuit.Container) -> a
    com.sun.lwuit.geom.Dimension getPreferredSize(com.sun.lwuit.Container) -> b
com.sun.lwuit.layouts.FlowLayout -> a:
    int orientation -> a
    void layoutContainer(com.sun.lwuit.Container) -> a
    void moveComponents(com.sun.lwuit.Container,int,int,int,int,int,int) -> a
    com.sun.lwuit.geom.Dimension getPreferredSize(com.sun.lwuit.Container) -> b
com.sun.lwuit.layouts.GridLayout -> c:
    int rows -> a
    int columns -> b
    void layoutContainer(com.sun.lwuit.Container) -> a
    com.sun.lwuit.geom.Dimension getPreferredSize(com.sun.lwuit.Container) -> b
com.sun.lwuit.layouts.Layout -> cc:
    void layoutContainer(com.sun.lwuit.Container) -> a
    com.sun.lwuit.geom.Dimension getPreferredSize(com.sun.lwuit.Container) -> b
    void addLayoutComponent(java.lang.Object,com.sun.lwuit.Component,com.sun.lwuit.Container) -> a
    void removeLayoutComponent(com.sun.lwuit.Component) -> a
    java.lang.Object getComponentConstraint(com.sun.lwuit.Component) -> b
com.sun.lwuit.list.DefaultListCellRenderer -> ay:
    boolean showNumbers -> a
    int selectionTransparency -> b
    com.sun.lwuit.Component getListCellRendererComponent$8253d07(java.lang.Object,int,boolean) -> a
    com.sun.lwuit.Component getListFocusComponent$6fe6986() -> d
    void repaint() -> T
    void setShowNumbers(boolean) -> d
com.sun.lwuit.list.ListCellRenderer -> bz:
    com.sun.lwuit.Component getListCellRendererComponent$8253d07(java.lang.Object,int,boolean) -> a
    com.sun.lwuit.Component getListFocusComponent$6fe6986() -> d
com.sun.lwuit.list.ListModel -> as:
    java.util.Vector items -> a
    java.util.Vector dataListeners -> b
    java.util.Vector selectionListeners -> c
    int selectedIndex -> d
    java.lang.Object getItemAt(int) -> a
    int getSize() -> a
    int getSelectedIndex() -> b
    void setSelectedIndex(int) -> b
    void addDataChangedListener(com.sun.lwuit.events.DataChangedListener) -> a
    void removeDataChangedListener(com.sun.lwuit.events.DataChangedListener) -> b
    void addSelectionListener(com.sun.lwuit.events.SelectionListener) -> a
    void removeSelectionListener(com.sun.lwuit.events.SelectionListener) -> b
com.sun.lwuit.plaf.Border -> k:
    com.sun.lwuit.plaf.Border defaultBorder -> a
    int type -> b
    boolean themeColors -> c
    int colorA -> d
    int colorB -> e
    int colorC -> f
    int colorD -> g
    int thickness -> h
    int arcWidth -> i
    int arcHeight -> j
    com.sun.lwuit.plaf.Border createRoundBorder(int,int,int) -> a
    com.sun.lwuit.plaf.Border createEtchedRaised(int,int) -> a
    boolean isBackgroundPainter() -> a
    com.sun.lwuit.plaf.Border getFocusedInstance() -> b
    com.sun.lwuit.plaf.Border createPressedVersion() -> c
    void paintBorderBackground(com.sun.lwuit.Graphics,com.sun.lwuit.Component) -> a
    void paint(com.sun.lwuit.Graphics,com.sun.lwuit.Component) -> b
    int getBackgroundColor(com.sun.lwuit.Component) -> a
    void drawImageBorderLine(com.sun.lwuit.Graphics,com.sun.lwuit.Image,com.sun.lwuit.Image,com.sun.lwuit.Image,int,int,int) -> a
    void drawImageBorderColumn(com.sun.lwuit.Graphics,com.sun.lwuit.Image,com.sun.lwuit.Image,com.sun.lwuit.Image,int,int,int) -> b
    com.sun.lwuit.plaf.Border getDefaultBorder() -> d
com.sun.lwuit.plaf.DefaultLookAndFeel -> r:
    com.sun.lwuit.Image[] chkBoxImages -> a
    com.sun.lwuit.Image comboImage -> b
    com.sun.lwuit.Image[] rButtonImages -> c
    long tickerSpeed -> d
    boolean tickWhenFocused -> e
    void bind(com.sun.lwuit.Component) -> a
    void drawButton(com.sun.lwuit.Graphics,com.sun.lwuit.Button) -> a
    void drawCheckBox(com.sun.lwuit.Graphics,com.sun.lwuit.CheckBox) -> a
    void fillCheckbox(com.sun.lwuit.Graphics,int,int) -> a
    int scaleCoordinate(float,float,int) -> a
    void drawLabel(com.sun.lwuit.Graphics,com.sun.lwuit.Label) -> a
    void drawRadioButton(com.sun.lwuit.Graphics,com.sun.lwuit.RadioButton) -> a
    void drawComboBox(com.sun.lwuit.Graphics,com.sun.lwuit.ComboBox) -> a
    int findDestColor(int) -> a
    void drawTextArea(com.sun.lwuit.Graphics,com.sun.lwuit.TextArea) -> a
    com.sun.lwuit.geom.Dimension getButtonPreferredSize(com.sun.lwuit.Button) -> a
    com.sun.lwuit.geom.Dimension getCheckBoxPreferredSize(com.sun.lwuit.CheckBox) -> a
    com.sun.lwuit.geom.Dimension getLabelPreferredSize(com.sun.lwuit.Label) -> a
    com.sun.lwuit.geom.Dimension getPreferredSize(com.sun.lwuit.Label,com.sun.lwuit.Image[],com.sun.lwuit.Image) -> a
    com.sun.lwuit.geom.Dimension getListPreferredSize(com.sun.lwuit.List) -> a
    com.sun.lwuit.geom.Dimension getRadioButtonPreferredSize(com.sun.lwuit.RadioButton) -> a
    com.sun.lwuit.geom.Dimension getTextAreaPreferredSize(com.sun.lwuit.TextArea) -> a
    void drawComponent(com.sun.lwuit.Graphics,com.sun.lwuit.Label,com.sun.lwuit.Image,com.sun.lwuit.Image,int) -> a
    int drawLabelStringValign(com.sun.lwuit.Graphics,com.sun.lwuit.Label,java.lang.String,int,int,int,int,int,int,int) -> a
    int drawLabelString(com.sun.lwuit.Graphics,com.sun.lwuit.Label,java.lang.String,int,int,int,int) -> a
    com.sun.lwuit.Image getIconFromState(com.sun.lwuit.Button) -> b
    com.sun.lwuit.geom.Dimension getComboBoxPreferredSize(com.sun.lwuit.ComboBox) -> a
    java.lang.String getTextFieldString(com.sun.lwuit.TextField) -> b
    void drawTextField(com.sun.lwuit.Graphics,com.sun.lwuit.TextField) -> a
    com.sun.lwuit.geom.Dimension getTextFieldPreferredSize(com.sun.lwuit.TextField) -> a
    void drawTextFieldCursor(com.sun.lwuit.Graphics,com.sun.lwuit.TextField) -> b
    void focusGained(com.sun.lwuit.Component) -> b
    void focusLost(com.sun.lwuit.Component) -> c
com.sun.lwuit.plaf.LookAndFeel -> l:
    int defaultFormTintColor -> a
    int disableColor -> b
    boolean defaultSmoothScrolling -> c
    int defaultSmoothScrollingSpeed -> d
    com.sun.lwuit.Image[] menuIcons -> e
    void bind(com.sun.lwuit.Component) -> a
    void drawButton(com.sun.lwuit.Graphics,com.sun.lwuit.Button) -> a
    void drawCheckBox(com.sun.lwuit.Graphics,com.sun.lwuit.CheckBox) -> a
    void drawComboBox(com.sun.lwuit.Graphics,com.sun.lwuit.ComboBox) -> a
    void drawLabel(com.sun.lwuit.Graphics,com.sun.lwuit.Label) -> a
    void drawRadioButton(com.sun.lwuit.Graphics,com.sun.lwuit.RadioButton) -> a
    void drawTextArea(com.sun.lwuit.Graphics,com.sun.lwuit.TextArea) -> a
    void drawTextField(com.sun.lwuit.Graphics,com.sun.lwuit.TextField) -> a
    void drawTextFieldCursor(com.sun.lwuit.Graphics,com.sun.lwuit.TextField) -> b
    com.sun.lwuit.geom.Dimension getButtonPreferredSize(com.sun.lwuit.Button) -> a
    com.sun.lwuit.geom.Dimension getCheckBoxPreferredSize(com.sun.lwuit.CheckBox) -> a
    com.sun.lwuit.geom.Dimension getLabelPreferredSize(com.sun.lwuit.Label) -> a
    com.sun.lwuit.geom.Dimension getListPreferredSize(com.sun.lwuit.List) -> a
    com.sun.lwuit.geom.Dimension getRadioButtonPreferredSize(com.sun.lwuit.RadioButton) -> a
    com.sun.lwuit.geom.Dimension getTextAreaPreferredSize(com.sun.lwuit.TextArea) -> a
    com.sun.lwuit.geom.Dimension getTextFieldPreferredSize(com.sun.lwuit.TextField) -> a
    com.sun.lwuit.geom.Dimension getComboBoxPreferredSize(com.sun.lwuit.ComboBox) -> a
    void drawVerticalScroll(com.sun.lwuit.Graphics,com.sun.lwuit.Component,float,float) -> a
    void drawBackgroundImage(com.sun.lwuit.Graphics,com.sun.lwuit.plaf.Style,int,int,int,int) -> a
    void setFG(com.sun.lwuit.Graphics,com.sun.lwuit.Component) -> a
    int getVerticalScrollWidth() -> a
    int getHorizontalScrollHeight() -> b
    int getDefaultFormTintColor() -> c
    boolean isDefaultSmoothScrolling() -> d
    int getDefaultSmoothScrollingSpeed() -> e
    com.sun.lwuit.Image[] getMenuIcons() -> f
com.sun.lwuit.plaf.Style -> bh:
    int fgColor -> a
    int bgColor -> b
    int bgSelectionColor -> c
    int fgSelectionColor -> d
    com.sun.lwuit.Font font -> e
    com.sun.lwuit.Image bgImage -> f
    int[] padding -> g
    int[] margin -> h
    byte transparency -> i
    com.sun.lwuit.Painter bgPainter -> j
    com.sun.lwuit.plaf.Border border -> k
    boolean scaleImage -> l
    short modifiedFlag -> m
    java.util.Vector listeners -> n
    void merge(com.sun.lwuit.plaf.Style) -> a
    int getBgColor() -> a
    com.sun.lwuit.Image getBgImage() -> b
    int getFgColor() -> c
    com.sun.lwuit.Font getFont() -> d
    void setBgColor(int) -> a
    void setFgColor(int) -> b
    void setFont(com.sun.lwuit.Font) -> a
    int getBgSelectionColor() -> e
    void setBgSelectionColor(int) -> c
    int getFgSelectionColor() -> f
    void setFgSelectionColor(int) -> d
    boolean isScaleImage() -> g
    void setScaleImage(boolean) -> a
    byte getBgTransparency() -> h
    void setPadding(int,int,int,int) -> a
    void setMargin(int,int,int,int) -> b
    int getPadding(int) -> e
    int getMargin(int) -> f
    void setBgImage(com.sun.lwuit.Image,boolean) -> a
    void setBgTransparency(int,boolean) -> a
    void firePropertyChanged(java.lang.String) -> a
    void addStyleListener(com.sun.lwuit.events.StyleListener) -> a
    void removeStyleListener(com.sun.lwuit.events.StyleListener) -> b
    void resetModifiedFlag() -> i
    void setBorder(com.sun.lwuit.plaf.Border) -> a
    com.sun.lwuit.plaf.Border getBorder() -> j
    com.sun.lwuit.Painter getBgPainter() -> k
    void setBgPainter(com.sun.lwuit.Painter) -> a
com.sun.lwuit.plaf.UIManager -> al:
    com.sun.lwuit.plaf.LookAndFeel current -> a
    java.util.Hashtable styles -> b
    java.util.Hashtable themeProps -> c
    com.sun.lwuit.plaf.UIManager instance -> d
    com.sun.lwuit.plaf.Style defaultStyle -> e
    boolean accessible -> f
    java.util.Hashtable imageCache -> g
    com.sun.lwuit.plaf.UIManager getInstance() -> a
    com.sun.lwuit.plaf.LookAndFeel getLookAndFeel() -> b
    com.sun.lwuit.plaf.Style getComponentStyle(java.lang.String) -> a
    com.sun.lwuit.plaf.Style createStyle(java.lang.String) -> b
    int[] toIntArray(java.lang.String) -> c
    com.sun.lwuit.Image parseImage(java.lang.String) -> d
    com.sun.lwuit.Font parseFont(java.lang.String) -> e
    java.util.Hashtable getResourceBundle() -> c
    java.lang.String localize(java.lang.String,java.lang.String) -> a
com.thedomokun.common.CUP$LogoParser$actions -> m:
com.thedomokun.common.LogoEnv -> t:
    java.util.Hashtable functions -> b
    com.thedomokun.common.Turtle turtle -> a
    void setFunction(java.lang.String,com.thedomokun.logonodes.LogoCmds) -> a
    com.thedomokun.logonodes.LogoCmds getFunction(java.lang.String) -> a
com.thedomokun.common.LogoInterpreter -> ah:
    com.thedomokun.common.LogoParser parser -> a
    java_cup.runtime.Symbol parse_tree -> b
    com.thedomokun.common.LogoEnv env -> c
    com.thedomokun.common.Turtle turtle -> d
    boolean do_debug_parse -> e
    com.thedomokun.logonodes.LogoCmds program -> f
    java_cup.runtime.Symbol parse(java.lang.String) -> b
    void interpret(java.lang.String) -> a
com.thedomokun.common.LogoLex -> bw:
    char[] ZZ_CMAP -> a
    int[] ZZ_ACTION -> b
    int[] ZZ_ROWMAP -> c
    int[] ZZ_TRANS -> d
    java.lang.String[] ZZ_ERROR_MSG -> e
    int[] ZZ_ATTRIBUTE -> f
    java.io.Reader zzReader -> g
    int zzState -> h
    int zzLexicalState -> i
    char[] zzBuffer -> j
    int zzMarkedPos -> k
    int zzPushbackPos -> l
    int zzCurrentPos -> m
    int zzStartRead -> n
    int zzEndRead -> o
    int yyline -> p
    int yycolumn -> q
    boolean zzAtEOF -> r
    boolean zzEOFDone -> s
    java_cup.runtime.Symbol sym(int) -> a
    java_cup.runtime.Symbol sym(int,java.lang.Object) -> a
    boolean zzRefill() -> b
    java.lang.String yytext() -> c
    java_cup.runtime.Symbol next_token() -> a
com.thedomokun.common.LogoParser -> bv:
    short[][] _production_table -> a
    short[][] _action_table -> b
    short[][] _reduce_table -> c
    com.thedomokun.common.CUP$LogoParser$actions action_obj -> d
    short[][] production_table() -> a
    short[][] action_table() -> b
    short[][] reduce_table() -> c
    void init_actions() -> f
    java_cup.runtime.Symbol do_action(int,java_cup.runtime.lr_parser,java.util.Stack,int) -> a
    java_cup.runtime.Symbol scan() -> g
com.thedomokun.common.Turtle -> i:
    double facing -> a
    boolean penUp -> b
    com.thedomokun.mobilogo.Point currentPos -> c
    int size -> d
    void reset(com.thedomokun.mobilogo.Point) -> a
    com.thedomokun.mobilogo.Point getCorner(double) -> a
    void forward(int) -> a
    void backward(int) -> b
    void left(int) -> d
    void right(int) -> c
com.thedomokun.logonodes.LogoCmd -> ca:
    int s -> a
    int d -> b
    java.lang.String identifier -> c
    java.lang.String toString() -> toString
    void eval(com.thedomokun.common.LogoEnv) -> a
com.thedomokun.logonodes.LogoCmds -> q:
    java.util.Vector cmds -> a
    java.lang.String toString() -> toString
    void eval(com.thedomokun.common.LogoEnv) -> a
com.thedomokun.logonodes.LogoFunc -> u:
    java.lang.String identifier -> a
    com.thedomokun.logonodes.LogoCmds body -> b
    java.lang.String toString() -> toString
    void eval(com.thedomokun.common.LogoEnv) -> a
com.thedomokun.logonodes.LogoNode -> bi:
    void eval(com.thedomokun.common.LogoEnv) -> a
com.thedomokun.logonodes.LogoRepeat -> bd:
    int n -> a
    com.thedomokun.logonodes.LogoCmds c -> b
    java.lang.String toString() -> toString
    void eval(com.thedomokun.common.LogoEnv) -> a
com.thedomokun.mobilogo.LWUITMenu -> com.thedomokun.mobilogo.c:
    com.sun.lwuit.Font menuFont -> a
    com.sun.lwuit.Font boldMenuFont -> b
    com.sun.lwuit.Font smallMenuFont -> c
    com.sun.lwuit.Font smallBoldMenuFont -> d
    com.sun.lwuit.Font numberFont -> e
    int nDigits -> f
    int nLines -> g
    int numberWidth -> h
    int numberHeight -> i
    int nLinesMonitor -> j
    int menuX -> k
    int menuY -> l
    int menuW -> m
    int menuH -> n
    com.thedomokun.mobilogo.LWUITMenu[] menuStack -> o
    int menuStackPtr -> p
    boolean menuEnabled -> q
    java.lang.String label -> r
    int command -> s
    com.thedomokun.mobilogo.LWUITMenu[] subMenu -> t
    int[] menuColor -> u
    void init_fonts() -> e
    void disableMenu() -> a
    void enableMenu() -> b
    boolean menuEnabled() -> c
    void resetMenu() -> d
    boolean plainLabel(java.lang.String) -> a
    int getBaselinePosition(com.sun.lwuit.Font) -> a
    void drawLabel(com.sun.lwuit.Graphics,java.lang.String,boolean,int,int) -> a
    void drawMenuItem(com.sun.lwuit.Graphics,com.thedomokun.mobilogo.LWUITMenu,int,int,int) -> a
    void drawMenu(com.sun.lwuit.Graphics) -> a
    int keyPressed(int) -> a
com.thedomokun.mobilogo.LWUITTurtle -> com.thedomokun.mobilogo.b:
    com.sun.lwuit.Graphics g -> d
    com.sun.lwuit.Image offscreenBuffer -> e
    void draw(com.sun.lwuit.Graphics) -> a
    void forward(int) -> a
    void backward(int) -> b
    void right(int) -> c
    void left(int) -> d
com.thedomokun.mobilogo.MobiLogo -> com.thedomokun.mobilogo.MobiLogo:
    com.thedomokun.mobilogo.MobiLogoLWUITComponent logoComponent -> a
    com.sun.lwuit.TextArea source -> b
    com.sun.lwuit.TextField input -> c
    com.sun.lwuit.Form form -> d
    boolean firstTime -> e
    com.thedomokun.mobilogo.MobiLogo$InputActionListener inputActionListener -> f
    com.thedomokun.mobilogo.MobiLogo$SourceActionListener sourceActionListener -> g
    void destroyApp(boolean) -> destroyApp
    void pauseApp() -> pauseApp
    void startApp() -> startApp
com.thedomokun.mobilogo.MobiLogo$InputActionListener -> com.thedomokun.mobilogo.e:
    void actionPerformed(com.sun.lwuit.events.ActionEvent) -> a
com.thedomokun.mobilogo.MobiLogo$SourceActionListener -> com.thedomokun.mobilogo.d:
    com.thedomokun.mobilogo.MobiLogo this$0 -> a
    void actionPerformed(com.sun.lwuit.events.ActionEvent) -> a
com.thedomokun.mobilogo.MobiLogoLWUITComponent -> com.thedomokun.mobilogo.a:
    com.thedomokun.mobilogo.LWUITTurtle turtle -> b
    com.sun.lwuit.Image offScreenBuffer -> c
    java.lang.String source -> d
    int width -> e
    int height -> f
    com.thedomokun.mobilogo.LWUITMenu moveMenu -> g
    com.thedomokun.mobilogo.LWUITMenu commandMenu -> h
    com.thedomokun.mobilogo.LWUITMenu menu -> i
    com.thedomokun.mobilogo.LWUITMenu operatorMenu -> j
    com.thedomokun.mobilogo.LWUITMenu symbolMenu -> k
    com.sun.lwuit.TextField input -> a
    java.lang.String getUIID() -> a_
    void interpret(boolean) -> a
    void paintClipRect(com.sun.lwuit.Graphics) -> e
    void paint(com.sun.lwuit.Graphics) -> a
    void start() -> b_
    void setSource(java.lang.String) -> a
    java.lang.String getSource() -> c_
    void disableMenu() -> d
    void keyReleased(int) -> a
    void keyPressed(int) -> b
com.thedomokun.mobilogo.Point -> com.thedomokun.mobilogo.f:
    int x -> a
    int y -> b
    int getX() -> a
    int getY() -> b
    void setX(double) -> a
    void setY(double) -> b
    java.lang.String toString() -> toString
java_cup.runtime.Scanner -> z:
    java_cup.runtime.Symbol next_token() -> a
java_cup.runtime.Symbol -> bf:
    int sym -> a
    int parse_state -> b
    boolean used_by_parser -> c
    int left -> d
    int right -> e
    java.lang.Object value -> f
    java.lang.String toString() -> toString
java_cup.runtime.lr_parser -> bu:
    boolean _done_parsing -> a
    int tos -> b
    java_cup.runtime.Symbol cur_token -> c
    java.util.Stack stack -> d
    short[][] production_tab -> e
    short[][] action_tab -> f
    short[][] reduce_tab -> g
    java_cup.runtime.Scanner _scanner -> h
    java_cup.runtime.Symbol[] lookahead -> i
    int lookahead_pos -> j
    short[][] production_table() -> a
    short[][] action_table() -> b
    short[][] reduce_table() -> c
    void done_parsing() -> d
    void setScanner(java_cup.runtime.Scanner) -> a
    java_cup.runtime.Scanner getScanner() -> e
    java_cup.runtime.Symbol do_action(int,java_cup.runtime.lr_parser,java.util.Stack,int) -> a
    void init_actions() -> f
    java_cup.runtime.Symbol scan() -> g
    void report_fatal_error(java.lang.String,java.lang.Object) -> a
    void report_error(java.lang.String,java.lang.Object) -> b
    short get_action(int,int) -> a
    short get_reduce(int,int) -> b
    java_cup.runtime.Symbol parse() -> h
    void debug_reduce(int,int,int) -> a
    void debug_shift(java_cup.runtime.Symbol) -> a
    boolean error_recovery(boolean) -> a
    void read_lookahead() -> i
    java_cup.runtime.Symbol cur_err_token() -> j
    boolean advance_lookahead() -> k
    void restart_lookahead() -> l
    boolean try_parse_ahead(boolean) -> b
    void parse_lookahead(boolean) -> c
    short[][] unpackFromStrings(java.lang.String[]) -> a
java_cup.runtime.virtual_parse_stack -> w:
    java.util.Stack real_stack -> a
    int real_next -> b
    java.util.Stack vstack -> c
    void get_from_real() -> c
    int top() -> a
    void pop() -> b
    void push(int) -> a
